// This code was generated by the Gardens Point Parser Generator
// Copyright (c) Wayne Kelly, QUT 2005-2010
// (see accompanying GPPGcopyright.rtf)

// GPPG version 1.5.0
// Machine:  TSNK
// DateTime: 2014-05-27 6:53:17 PM
// UserName: Samuel
// Input file <CbParser.y - 2014-05-27 6:27:29 PM>

// options: lines gplex

using System;
using System.Collections.Generic;
using System.Globalization;
using System.Text;
using QUT.Gppg;
using System.IO;

public enum Tokens {error=126,
    EOF=127,OROR=128,ANDAND=129,EQEQ=130,NOTEQ=131,GTEQ=132,
    LTEQ=133,UMINUS=134,Kwd_break=135,Kwd_class=136,Kwd_const=137,Kwd_else=138,
    Kwd_if=139,Kwd_int=140,Kwd_new=141,Kwd_out=142,Kwd_public=143,Kwd_return=144,
    Kwd_static=145,Kwd_string=146,Kwd_using=147,Kwd_void=148,Kwd_while=149,PLUSPLUS=150,
    MINUSMINUS=151,Ident=152,Number=153,StringConst=154,Kwd_null=155,Kwd_virtual=156,
    Kwd_override=157,Char=158};

// Abstract base class for GPLEX scanners
public abstract class ScanBase : AbstractScanner<int,LexLocation> {
  private LexLocation __yylloc = new LexLocation();
  public override LexLocation yylloc { get { return __yylloc; } set { __yylloc = value; } }
  protected virtual bool yywrap() { return true; }
}

// Utility class for encapsulating token information
public class ScanObj {
  public int token;
  public int yylval;
  public LexLocation yylloc;
  public ScanObj( int t, int val, LexLocation loc ) {
    this.token = t; this.yylval = val; this.yylloc = loc;
  }
}

public class Parser: ShiftReduceParser<int, LexLocation>
{
#pragma warning disable 649
  private static Dictionary<int, string> aliasses;
#pragma warning restore 649
  private static Rule[] rules = new Rule[90];
  private static State[] states = new State[185];
  private static string[] nonTerms = new string[] {
      "Program", "$accept", "UsingList", "ClassList", "IDENT", "ClassDecl", "DeclList", 
      "ConstDecl", "MethodDecl", "Type", "InitVal", "FieldDeclList", "FieldDecl", 
      "IdentList", "OptFormals", "Block", "FormalPars", "FormalDecl", "TypeName", 
      "Statement", "Designator", "Expr", "OptActuals", "OptElsePart", "ActPars", 
      "DeclsAndStmts", "LocalDecl", "Qualifiers", };

  static Parser() {
    states[0] = new State(new int[]{147,181,136,-3},new int[]{-1,1,-3,3});
    states[1] = new State(new int[]{127,2});
    states[2] = new State(-1);
    states[3] = new State(new int[]{136,6},new int[]{-4,4,-6,180});
    states[4] = new State(new int[]{136,6,127,-2},new int[]{-6,5});
    states[5] = new State(-5);
    states[6] = new State(new int[]{152,7});
    states[7] = new State(new int[]{123,8,58,175});
    states[8] = new State(-11,new int[]{-7,9});
    states[9] = new State(new int[]{125,10,143,13,152,171},new int[]{-8,11,-9,12});
    states[10] = new State(-7);
    states[11] = new State(-9);
    states[12] = new State(-10);
    states[13] = new State(new int[]{137,14,145,33,156,157,157,164,152,26,140,27,146,28,148,29},new int[]{-10,30,-19,23});
    states[14] = new State(new int[]{152,26,140,27,146,28,148,29},new int[]{-10,15,-19,23});
    states[15] = new State(new int[]{152,22},new int[]{-5,16});
    states[16] = new State(new int[]{61,17});
    states[17] = new State(new int[]{153,20,154,21},new int[]{-11,18});
    states[18] = new State(new int[]{59,19});
    states[19] = new State(-12);
    states[20] = new State(-14);
    states[21] = new State(-15);
    states[22] = new State(-89);
    states[23] = new State(new int[]{91,24,152,-31});
    states[24] = new State(new int[]{93,25});
    states[25] = new State(-32);
    states[26] = new State(-33);
    states[27] = new State(-34);
    states[28] = new State(-35);
    states[29] = new State(-36);
    states[30] = new State(new int[]{152,22},new int[]{-5,31});
    states[31] = new State(new int[]{59,32});
    states[32] = new State(-13);
    states[33] = new State(new int[]{152,26,140,27,146,28,148,29},new int[]{-10,34,-19,23});
    states[34] = new State(new int[]{152,35});
    states[35] = new State(new int[]{40,36});
    states[36] = new State(new int[]{152,26,140,27,146,28,148,29,41,-26},new int[]{-15,37,-17,151,-18,156,-10,154,-19,23});
    states[37] = new State(new int[]{41,38});
    states[38] = new State(new int[]{123,40},new int[]{-16,39});
    states[39] = new State(-22);
    states[40] = new State(-58,new int[]{-26,41});
    states[41] = new State(new int[]{125,42,152,118,139,128,149,136,135,141,144,143,123,40,59,148,140,27,146,28,148,29},new int[]{-20,43,-27,44,-21,45,-16,147,-10,149,-19,23});
    states[42] = new State(-54);
    states[43] = new State(-59);
    states[44] = new State(-60);
    states[45] = new State(new int[]{61,46,40,110,150,114,151,116});
    states[46] = new State(new int[]{45,75,152,84,153,93,158,94,154,95,141,98,40,105,155,108},new int[]{-22,47,-21,77});
    states[47] = new State(new int[]{59,48,128,49,129,51,130,53,131,55,133,57,60,59,132,61,62,63,43,65,45,67,42,69,47,71,37,73});
    states[48] = new State(-37);
    states[49] = new State(new int[]{45,75,152,84,153,93,158,94,154,95,141,98,40,105,155,108},new int[]{-22,50,-21,77});
    states[50] = new State(new int[]{128,-61,129,51,130,53,131,55,133,57,60,59,132,61,62,63,43,65,45,67,42,69,47,71,37,73,59,-61,44,-61,41,-61,93,-61});
    states[51] = new State(new int[]{45,75,152,84,153,93,158,94,154,95,141,98,40,105,155,108},new int[]{-22,52,-21,77});
    states[52] = new State(new int[]{128,-62,129,-62,130,53,131,55,133,57,60,59,132,61,62,63,43,65,45,67,42,69,47,71,37,73,59,-62,44,-62,41,-62,93,-62});
    states[53] = new State(new int[]{45,75,152,84,153,93,158,94,154,95,141,98,40,105,155,108},new int[]{-22,54,-21,77});
    states[54] = new State(new int[]{128,-63,129,-63,130,53,131,55,133,57,60,59,132,61,62,63,43,65,45,67,42,69,47,71,37,73,59,-63,44,-63,41,-63,93,-63});
    states[55] = new State(new int[]{45,75,152,84,153,93,158,94,154,95,141,98,40,105,155,108},new int[]{-22,56,-21,77});
    states[56] = new State(new int[]{128,-64,129,-64,130,53,131,55,133,57,60,59,132,61,62,63,43,65,45,67,42,69,47,71,37,73,59,-64,44,-64,41,-64,93,-64});
    states[57] = new State(new int[]{45,75,152,84,153,93,158,94,154,95,141,98,40,105,155,108},new int[]{-22,58,-21,77});
    states[58] = new State(new int[]{128,-65,129,-65,130,-65,131,-65,133,57,60,59,132,61,62,63,43,65,45,67,42,69,47,71,37,73,59,-65,44,-65,41,-65,93,-65});
    states[59] = new State(new int[]{45,75,152,84,153,93,158,94,154,95,141,98,40,105,155,108},new int[]{-22,60,-21,77});
    states[60] = new State(new int[]{128,-66,129,-66,130,-66,131,-66,133,57,60,59,132,61,62,63,43,65,45,67,42,69,47,71,37,73,59,-66,44,-66,41,-66,93,-66});
    states[61] = new State(new int[]{45,75,152,84,153,93,158,94,154,95,141,98,40,105,155,108},new int[]{-22,62,-21,77});
    states[62] = new State(new int[]{128,-67,129,-67,130,-67,131,-67,133,57,60,59,132,61,62,63,43,65,45,67,42,69,47,71,37,73,59,-67,44,-67,41,-67,93,-67});
    states[63] = new State(new int[]{45,75,152,84,153,93,158,94,154,95,141,98,40,105,155,108},new int[]{-22,64,-21,77});
    states[64] = new State(new int[]{128,-68,129,-68,130,-68,131,-68,133,57,60,59,132,61,62,63,43,65,45,67,42,69,47,71,37,73,59,-68,44,-68,41,-68,93,-68});
    states[65] = new State(new int[]{45,75,152,84,153,93,158,94,154,95,141,98,40,105,155,108},new int[]{-22,66,-21,77});
    states[66] = new State(new int[]{128,-69,129,-69,130,-69,131,-69,133,-69,60,-69,132,-69,62,-69,43,-69,45,-69,42,69,47,71,37,73,59,-69,44,-69,41,-69,93,-69});
    states[67] = new State(new int[]{45,75,152,84,153,93,158,94,154,95,141,98,40,105,155,108},new int[]{-22,68,-21,77});
    states[68] = new State(new int[]{128,-70,129,-70,130,-70,131,-70,133,-70,60,-70,132,-70,62,-70,43,-70,45,-70,42,69,47,71,37,73,59,-70,44,-70,41,-70,93,-70});
    states[69] = new State(new int[]{45,75,152,84,153,93,158,94,154,95,141,98,40,105,155,108},new int[]{-22,70,-21,77});
    states[70] = new State(-71);
    states[71] = new State(new int[]{45,75,152,84,153,93,158,94,154,95,141,98,40,105,155,108},new int[]{-22,72,-21,77});
    states[72] = new State(-72);
    states[73] = new State(new int[]{45,75,152,84,153,93,158,94,154,95,141,98,40,105,155,108},new int[]{-22,74,-21,77});
    states[74] = new State(-73);
    states[75] = new State(new int[]{45,75,152,84,153,93,158,94,154,95,141,98,40,105,155,108},new int[]{-22,76,-21,77});
    states[76] = new State(-74);
    states[77] = new State(new int[]{40,78,59,-75,128,-75,129,-75,130,-75,131,-75,133,-75,60,-75,132,-75,62,-75,43,-75,45,-75,42,-75,47,-75,37,-75,44,-75,41,-75,93,-75});
    states[78] = new State(new int[]{45,75,152,84,153,93,158,94,154,95,141,98,40,105,155,108,41,-48},new int[]{-23,79,-25,81,-22,109,-21,77});
    states[79] = new State(new int[]{41,80});
    states[80] = new State(-76);
    states[81] = new State(new int[]{44,82,41,-49});
    states[82] = new State(new int[]{45,75,152,84,153,93,158,94,154,95,141,98,40,105,155,108},new int[]{-22,83,-21,77});
    states[83] = new State(new int[]{128,49,129,51,130,53,131,55,133,57,60,59,132,61,62,63,43,65,45,67,42,69,47,71,37,73,44,-50,41,-50});
    states[84] = new State(new int[]{46,86,91,89,40,-88,59,-88,128,-88,129,-88,130,-88,131,-88,133,-88,60,-88,132,-88,62,-88,43,-88,45,-88,42,-88,47,-88,37,-88,44,-88,41,-88,93,-88,61,-88,150,-88,151,-88},new int[]{-28,85});
    states[85] = new State(-85);
    states[86] = new State(new int[]{152,87});
    states[87] = new State(new int[]{46,86,91,89,40,-88,59,-88,128,-88,129,-88,130,-88,131,-88,133,-88,60,-88,132,-88,62,-88,43,-88,45,-88,42,-88,47,-88,37,-88,44,-88,41,-88,93,-88,61,-88,150,-88,151,-88},new int[]{-28,88});
    states[88] = new State(-86);
    states[89] = new State(new int[]{45,75,152,84,153,93,158,94,154,95,141,98,40,105,155,108},new int[]{-22,90,-21,77});
    states[90] = new State(new int[]{93,91,128,49,129,51,130,53,131,55,133,57,60,59,132,61,62,63,43,65,45,67,42,69,47,71,37,73});
    states[91] = new State(new int[]{46,86,91,89,40,-88,59,-88,128,-88,129,-88,130,-88,131,-88,133,-88,60,-88,132,-88,62,-88,43,-88,45,-88,42,-88,47,-88,37,-88,44,-88,41,-88,93,-88,61,-88,150,-88,151,-88},new int[]{-28,92});
    states[92] = new State(-87);
    states[93] = new State(-77);
    states[94] = new State(-78);
    states[95] = new State(new int[]{46,96,59,-79,128,-79,129,-79,130,-79,131,-79,133,-79,60,-79,132,-79,62,-79,43,-79,45,-79,42,-79,47,-79,37,-79,44,-79,41,-79,93,-79});
    states[96] = new State(new int[]{152,97});
    states[97] = new State(-80);
    states[98] = new State(new int[]{152,99});
    states[99] = new State(new int[]{40,100,91,102});
    states[100] = new State(new int[]{41,101});
    states[101] = new State(-81);
    states[102] = new State(new int[]{45,75,152,84,153,93,158,94,154,95,141,98,40,105,155,108},new int[]{-22,103,-21,77});
    states[103] = new State(new int[]{93,104,128,49,129,51,130,53,131,55,133,57,60,59,132,61,62,63,43,65,45,67,42,69,47,71,37,73});
    states[104] = new State(-82);
    states[105] = new State(new int[]{45,75,152,84,153,93,158,94,154,95,141,98,40,105,155,108},new int[]{-22,106,-21,77});
    states[106] = new State(new int[]{41,107,128,49,129,51,130,53,131,55,133,57,60,59,132,61,62,63,43,65,45,67,42,69,47,71,37,73});
    states[107] = new State(-83);
    states[108] = new State(-84);
    states[109] = new State(new int[]{128,49,129,51,130,53,131,55,133,57,60,59,132,61,62,63,43,65,45,67,42,69,47,71,37,73,44,-51,41,-51});
    states[110] = new State(new int[]{45,75,152,84,153,93,158,94,154,95,141,98,40,105,155,108,41,-48},new int[]{-23,111,-25,81,-22,109,-21,77});
    states[111] = new State(new int[]{41,112});
    states[112] = new State(new int[]{59,113});
    states[113] = new State(-38);
    states[114] = new State(new int[]{59,115});
    states[115] = new State(-39);
    states[116] = new State(new int[]{59,117});
    states[117] = new State(-40);
    states[118] = new State(new int[]{91,123,46,86,152,22,61,-88,40,-88,150,-88,151,-88},new int[]{-28,85,-14,119,-5,127});
    states[119] = new State(new int[]{59,120,44,121});
    states[120] = new State(-55);
    states[121] = new State(new int[]{152,22},new int[]{-5,122});
    states[122] = new State(-20);
    states[123] = new State(new int[]{93,124,45,75,152,84,153,93,158,94,154,95,141,98,40,105,155,108},new int[]{-22,90,-21,77});
    states[124] = new State(new int[]{152,22},new int[]{-14,125,-5,127});
    states[125] = new State(new int[]{59,126,44,121});
    states[126] = new State(-57);
    states[127] = new State(-21);
    states[128] = new State(new int[]{40,129});
    states[129] = new State(new int[]{45,75,152,84,153,93,158,94,154,95,141,98,40,105,155,108},new int[]{-22,130,-21,77});
    states[130] = new State(new int[]{41,131,128,49,129,51,130,53,131,55,133,57,60,59,132,61,62,63,43,65,45,67,42,69,47,71,37,73});
    states[131] = new State(new int[]{152,84,139,128,149,136,135,141,144,143,123,40,59,148},new int[]{-20,132,-21,45,-16,147});
    states[132] = new State(new int[]{138,134,125,-53,152,-53,139,-53,149,-53,135,-53,144,-53,123,-53,59,-53,140,-53,146,-53,148,-53},new int[]{-24,133});
    states[133] = new State(-41);
    states[134] = new State(new int[]{152,84,139,128,149,136,135,141,144,143,123,40,59,148},new int[]{-20,135,-21,45,-16,147});
    states[135] = new State(-52);
    states[136] = new State(new int[]{40,137});
    states[137] = new State(new int[]{45,75,152,84,153,93,158,94,154,95,141,98,40,105,155,108},new int[]{-22,138,-21,77});
    states[138] = new State(new int[]{41,139,128,49,129,51,130,53,131,55,133,57,60,59,132,61,62,63,43,65,45,67,42,69,47,71,37,73});
    states[139] = new State(new int[]{152,84,139,128,149,136,135,141,144,143,123,40,59,148},new int[]{-20,140,-21,45,-16,147});
    states[140] = new State(-42);
    states[141] = new State(new int[]{59,142});
    states[142] = new State(-43);
    states[143] = new State(new int[]{59,144,45,75,152,84,153,93,158,94,154,95,141,98,40,105,155,108},new int[]{-22,145,-21,77});
    states[144] = new State(-44);
    states[145] = new State(new int[]{59,146,128,49,129,51,130,53,131,55,133,57,60,59,132,61,62,63,43,65,45,67,42,69,47,71,37,73});
    states[146] = new State(-45);
    states[147] = new State(-46);
    states[148] = new State(-47);
    states[149] = new State(new int[]{152,22},new int[]{-14,150,-5,127});
    states[150] = new State(new int[]{44,121,125,-56,152,-56,139,-56,149,-56,135,-56,144,-56,123,-56,59,-56,140,-56,146,-56,148,-56});
    states[151] = new State(new int[]{44,152,41,-27});
    states[152] = new State(new int[]{152,26,140,27,146,28,148,29},new int[]{-18,153,-10,154,-19,23});
    states[153] = new State(-29);
    states[154] = new State(new int[]{152,155});
    states[155] = new State(-30);
    states[156] = new State(-28);
    states[157] = new State(new int[]{152,26,140,27,146,28,148,29},new int[]{-10,158,-19,23});
    states[158] = new State(new int[]{152,159});
    states[159] = new State(new int[]{40,160});
    states[160] = new State(new int[]{152,26,140,27,146,28,148,29,41,-26},new int[]{-15,161,-17,151,-18,156,-10,154,-19,23});
    states[161] = new State(new int[]{41,162});
    states[162] = new State(new int[]{123,40},new int[]{-16,163});
    states[163] = new State(-23);
    states[164] = new State(new int[]{152,26,140,27,146,28,148,29},new int[]{-10,165,-19,23});
    states[165] = new State(new int[]{152,166});
    states[166] = new State(new int[]{40,167});
    states[167] = new State(new int[]{152,26,140,27,146,28,148,29,41,-26},new int[]{-15,168,-17,151,-18,156,-10,154,-19,23});
    states[168] = new State(new int[]{41,169});
    states[169] = new State(new int[]{123,40},new int[]{-16,170});
    states[170] = new State(-24);
    states[171] = new State(new int[]{46,172});
    states[172] = new State(new int[]{143,174,152,171},new int[]{-9,173});
    states[173] = new State(-25);
    states[174] = new State(new int[]{145,33,156,157,157,164});
    states[175] = new State(new int[]{152,176});
    states[176] = new State(new int[]{123,177});
    states[177] = new State(-11,new int[]{-7,178});
    states[178] = new State(new int[]{125,179,143,13,152,171},new int[]{-8,11,-9,12});
    states[179] = new State(-8);
    states[180] = new State(-6);
    states[181] = new State(new int[]{152,22},new int[]{-5,182});
    states[182] = new State(new int[]{59,183});
    states[183] = new State(new int[]{147,181,136,-3},new int[]{-3,184});
    states[184] = new State(-4);

    for (int sNo = 0; sNo < states.Length; sNo++) states[sNo].number = sNo;

    rules[1] = new Rule(-2, new int[]{-1,127});
    rules[2] = new Rule(-1, new int[]{-3,-4});
    rules[3] = new Rule(-3, new int[]{});
    rules[4] = new Rule(-3, new int[]{147,-5,59,-3});
    rules[5] = new Rule(-4, new int[]{-4,-6});
    rules[6] = new Rule(-4, new int[]{-6});
    rules[7] = new Rule(-6, new int[]{136,152,123,-7,125});
    rules[8] = new Rule(-6, new int[]{136,152,58,152,123,-7,125});
    rules[9] = new Rule(-7, new int[]{-7,-8});
    rules[10] = new Rule(-7, new int[]{-7,-9});
    rules[11] = new Rule(-7, new int[]{});
    rules[12] = new Rule(-8, new int[]{143,137,-10,-5,61,-11,59});
    rules[13] = new Rule(-8, new int[]{143,-10,-5,59});
    rules[14] = new Rule(-11, new int[]{153});
    rules[15] = new Rule(-11, new int[]{154});
    rules[16] = new Rule(-12, new int[]{-12,-13});
    rules[17] = new Rule(-12, new int[]{});
    rules[18] = new Rule(-13, new int[]{143,-10,-14,59});
    rules[19] = new Rule(-13, new int[]{-10,-14,59});
    rules[20] = new Rule(-14, new int[]{-14,44,-5});
    rules[21] = new Rule(-14, new int[]{-5});
    rules[22] = new Rule(-9, new int[]{143,145,-10,152,40,-15,41,-16});
    rules[23] = new Rule(-9, new int[]{143,156,-10,152,40,-15,41,-16});
    rules[24] = new Rule(-9, new int[]{143,157,-10,152,40,-15,41,-16});
    rules[25] = new Rule(-9, new int[]{152,46,-9});
    rules[26] = new Rule(-15, new int[]{});
    rules[27] = new Rule(-15, new int[]{-17});
    rules[28] = new Rule(-17, new int[]{-18});
    rules[29] = new Rule(-17, new int[]{-17,44,-18});
    rules[30] = new Rule(-18, new int[]{-10,152});
    rules[31] = new Rule(-10, new int[]{-19});
    rules[32] = new Rule(-10, new int[]{-19,91,93});
    rules[33] = new Rule(-19, new int[]{152});
    rules[34] = new Rule(-19, new int[]{140});
    rules[35] = new Rule(-19, new int[]{146});
    rules[36] = new Rule(-19, new int[]{148});
    rules[37] = new Rule(-20, new int[]{-21,61,-22,59});
    rules[38] = new Rule(-20, new int[]{-21,40,-23,41,59});
    rules[39] = new Rule(-20, new int[]{-21,150,59});
    rules[40] = new Rule(-20, new int[]{-21,151,59});
    rules[41] = new Rule(-20, new int[]{139,40,-22,41,-20,-24});
    rules[42] = new Rule(-20, new int[]{149,40,-22,41,-20});
    rules[43] = new Rule(-20, new int[]{135,59});
    rules[44] = new Rule(-20, new int[]{144,59});
    rules[45] = new Rule(-20, new int[]{144,-22,59});
    rules[46] = new Rule(-20, new int[]{-16});
    rules[47] = new Rule(-20, new int[]{59});
    rules[48] = new Rule(-23, new int[]{});
    rules[49] = new Rule(-23, new int[]{-25});
    rules[50] = new Rule(-25, new int[]{-25,44,-22});
    rules[51] = new Rule(-25, new int[]{-22});
    rules[52] = new Rule(-24, new int[]{138,-20});
    rules[53] = new Rule(-24, new int[]{});
    rules[54] = new Rule(-16, new int[]{123,-26,125});
    rules[55] = new Rule(-27, new int[]{152,-14,59});
    rules[56] = new Rule(-27, new int[]{-10,-14});
    rules[57] = new Rule(-27, new int[]{152,91,93,-14,59});
    rules[58] = new Rule(-26, new int[]{});
    rules[59] = new Rule(-26, new int[]{-26,-20});
    rules[60] = new Rule(-26, new int[]{-26,-27});
    rules[61] = new Rule(-22, new int[]{-22,128,-22});
    rules[62] = new Rule(-22, new int[]{-22,129,-22});
    rules[63] = new Rule(-22, new int[]{-22,130,-22});
    rules[64] = new Rule(-22, new int[]{-22,131,-22});
    rules[65] = new Rule(-22, new int[]{-22,133,-22});
    rules[66] = new Rule(-22, new int[]{-22,60,-22});
    rules[67] = new Rule(-22, new int[]{-22,132,-22});
    rules[68] = new Rule(-22, new int[]{-22,62,-22});
    rules[69] = new Rule(-22, new int[]{-22,43,-22});
    rules[70] = new Rule(-22, new int[]{-22,45,-22});
    rules[71] = new Rule(-22, new int[]{-22,42,-22});
    rules[72] = new Rule(-22, new int[]{-22,47,-22});
    rules[73] = new Rule(-22, new int[]{-22,37,-22});
    rules[74] = new Rule(-22, new int[]{45,-22});
    rules[75] = new Rule(-22, new int[]{-21});
    rules[76] = new Rule(-22, new int[]{-21,40,-23,41});
    rules[77] = new Rule(-22, new int[]{153});
    rules[78] = new Rule(-22, new int[]{158});
    rules[79] = new Rule(-22, new int[]{154});
    rules[80] = new Rule(-22, new int[]{154,46,152});
    rules[81] = new Rule(-22, new int[]{141,152,40,41});
    rules[82] = new Rule(-22, new int[]{141,152,91,-22,93});
    rules[83] = new Rule(-22, new int[]{40,-22,41});
    rules[84] = new Rule(-22, new int[]{155});
    rules[85] = new Rule(-21, new int[]{152,-28});
    rules[86] = new Rule(-28, new int[]{46,152,-28});
    rules[87] = new Rule(-28, new int[]{91,-22,93,-28});
    rules[88] = new Rule(-28, new int[]{});
    rules[89] = new Rule(-5, new int[]{152});
  }

  protected override void Initialize() {
    this.InitSpecialTokens((int)Tokens.error, (int)Tokens.EOF);
    this.InitStates(states);
    this.InitRules(rules);
    this.InitNonTerminals(nonTerms);
  }

  protected override void DoAction(int action)
  {
#pragma warning disable 162, 1522
    switch (action)
    {
      case 89: // IDENT -> Ident
#line 180 "CbParser.y"
{push_id();writeln("Token.Ident, text = ", pop_id());}
        break;
    }
#pragma warning restore 162, 1522
  }

  protected override string TerminalToString(int terminal)
  {
    if (aliasses != null && aliasses.ContainsKey(terminal))
        return aliasses[terminal];
    else if (((Tokens)terminal).ToString() != terminal.ToString(CultureInfo.InvariantCulture))
        return ((Tokens)terminal).ToString();
    else
        return CharToString((char)terminal);
  }

#line 184 "CbParser.y"

#line 185 "CbParser.y"

#line 186 "CbParser.y"

#line 187 "CbParser.y"
//The following is how this was done in the lab
#line 188 "CbParser.y"

#line 189 "CbParser.y"
//Flags
#line 190 "CbParser.y"
public Boolean flg_debug; 
#line 191 "CbParser.y"
public Boolean flg_token; 
#line 192 "CbParser.y"

#line 193 "CbParser.y"

#line 194 "CbParser.y"
Boolean hasMain = false; 
#line 195 "CbParser.y"

#line 196 "CbParser.y"
public Stack<string> id_stack = new Stack<string>();
#line 197 "CbParser.y"

#line 198 "CbParser.y"
public void push_id() {
#line 199 "CbParser.y"
  string t = ((LexScanner.Scanner)Scanner).last_token_text;
#line 200 "CbParser.y"
  id_stack.Push(t);
#line 201 "CbParser.y"
}
#line 202 "CbParser.y"
public string pop_id() {
#line 203 "CbParser.y"
  return id_stack.Pop();
#line 204 "CbParser.y"
}
#line 205 "CbParser.y"

#line 206 "CbParser.y"
public string token_text() {
#line 207 "CbParser.y"
  return ((LexScanner.Scanner)Scanner).last_token_text;
#line 208 "CbParser.y"
}
#line 209 "CbParser.y"

#line 210 "CbParser.y"
public void writeln() {
#line 211 "CbParser.y"
  writeln(null,null);
#line 212 "CbParser.y"
}
#line 213 "CbParser.y"
public void writeln(string opcode) {
#line 214 "CbParser.y"
  writeln(opcode,null);
#line 215 "CbParser.y"
}
#line 216 "CbParser.y"

#line 217 "CbParser.y"
public void writeln(string opcode, string value) {
#line 218 "CbParser.y"
  if (opcode != null) {
#line 219 "CbParser.y"
    System.Console.Write(opcode);
#line 220 "CbParser.y"
    if (value != null) {
#line 221 "CbParser.y"
      System.Console.Write(' '+value);
#line 222 "CbParser.y"
    }
#line 223 "CbParser.y"
  }
#line 224 "CbParser.y"
  System.Console.Write('\n');
#line 225 "CbParser.y"
}
#line 226 "CbParser.y"

#line 227 "CbParser.y"
public void openFile(FileStream file){
#line 228 "CbParser.y"
   this.Scanner = new LexScanner.Scanner(file);
#line 229 "CbParser.y"
}
#line 230 "CbParser.y"

#line 231 "CbParser.y"
// The parser needs a constructor
#line 232 "CbParser.y"
public Parser() : base(null) { }
}
